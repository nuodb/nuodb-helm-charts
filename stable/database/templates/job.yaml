{{- if .Values.database.sm.hotCopy.enablePod }}
apiVersion: batch/v1
kind: Job
metadata:
  name: hotcopy-{{ .Values.database.name }}-job-initial
  labels:
    group: nuodb
    subgroup: backup
    database: {{ .Values.database.name }}
spec:
  parallelism: 1
  completions: 1
  template:
    spec:
      initContainers:
      - name: wait-for-database-running
        image: {{ template "nuodb.image" . }}
        imagePullPolicy: {{ .Values.nuodb.image.pullPolicy }}
        args:
        - "nuocmd"
        - "--api-server"
        - "https://{{ template "admin.address" . }}:8888"
        - "check"
        - "database"
        - "--db-name"
        - "{{ .Values.database.name }}"
        - "--check-running"
        - "--wait-forever"

      containers:
      - name: nuodb
        image: {{ template "nuodb.image" . }}
        imagePullPolicy: {{ .Values.nuodb.image.pullPolicy }}
        args:
        - "nuobackup"
        - "--type"
        - "full"
        - "--db-name"
        - "{{ .Values.database.name }}"
        - "--group"
        - "{{ include "hotcopy.group" . }}"
        - "--timeout"
        - "{{ .Values.database.sm.hotCopy.timeout }}"      
        - "--backup-root"
        - "{{ .Values.database.sm.hotCopy.backupDir }}"
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - { name: DB_NAME,             value: "{{ .Values.database.name }}" }
        - { name: NUOCMD_API_SERVER,   value: "{{ template "admin.address" . }}:8888"}
        - { name: PEER_ADDRESS,        value: "{{ template "admin.address" . }}" }
        - { name: TIMEOUT,             value: "{{ .Values.database.sm.hotCopy.timeout }}" }
        - { name: BACKUP_DIR,          value: "{{ .Values.database.sm.hotCopy.backupDir }}" }
        volumeMounts:
        - name: nuobackup
          mountPath: /usr/local/bin/nuobackup
          subPath: nuobackup
        {{- if .Values.admin.tlsCACert }}
        - name: tls-ca-cert
          mountPath: /etc/nuodb/keys/ca.cert
          subPath: {{ .Values.admin.tlsCACert.key }}
        {{- end }}
        {{- if .Values.admin.tlsClientPEM }}
        - name: tls-client-pem
          mountPath: /etc/nuodb/keys/nuocmd.pem
          subPath: {{ .Values.admin.tlsClientPEM.key }}
        {{- end }}
      volumes:
      - name: nuobackup
        configMap:
          name: {{ template "database.fullname" . }}-nuobackup
          defaultMode: 0777
      {{- if .Values.admin.tlsCACert }}
      - name: tls-ca-cert
        secret:
          secretName: {{ .Values.admin.tlsCACert.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if .Values.admin.tlsClientPEM }}
      - name: tls-client-pem
        secret:
          secretName: {{ .Values.admin.tlsClientPEM.secret }}
          defaultMode: 0440
      {{- end }}
      restartPolicy: Never
{{- include "nuodb.imagePullSecrets" . | indent 6 }}
{{- end }}
