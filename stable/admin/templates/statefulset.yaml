apiVersion: "apps/v1"
kind: StatefulSet
metadata:
  labels:
    app: {{ template "admin.fullname" . }}
    chart: {{ template "admin.chart" . }}
    release: {{ .Release.Name | quote }}
    group: nuodb
    domain: {{ .Values.admin.domain }}
  name: {{ template "admin.fullname" . }}
spec:
  serviceName: {{ .Values.admin.domain }}
  podManagementPolicy: Parallel
  replicas: {{ .Values.admin.replicas }}
  selector:
    matchLabels:
      app: {{ template "admin.fullname" . }}
      component: admin
  template:
    metadata:
      name: {{ template "admin.fullname" . }}
      labels:
        app: {{ template "admin.fullname" . }}
        chart: {{ template "admin.chart" . }}
        release: {{ .Release.Name | quote }}
        component: admin
        domain: {{ .Values.admin.domain }}
        group: nuodb
    spec:
      serviceAccountName: {{ default "nuodb" .Values.nuodb.serviceAccount }}
      {{- with .Values.admin.nodeSelector }}
      nodeSelector:
{{ toYaml . | trim | indent 8 }}
      {{- end }}
{{- if .Values.admin.affinity }}
      affinity:
{{ tpl .Values.admin.affinity . | trim | indent 8 }}
{{- end }}
      {{- if .Values.admin.tolerations }}
      tolerations:
{{ toYaml .Values.admin.tolerations | trim | indent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: 15
      initContainers:
      - name: init-disk
        image: {{ template "init.image" . }}
        imagePullPolicy: {{ default "" .Values.busybox.image.pullPolicy }}
        command: ['chmod' , '770', '/var/opt/nuodb', '/var/log/nuodb']
        volumeMounts:
        - name: raftlog
          mountPath: /var/opt/nuodb
        - name: log-volume
          mountPath: /var/log/nuodb
      containers:
      - name: admin
        image: {{ template "nuodb.image" . }}
        imagePullPolicy: {{ .Values.nuodb.image.pullPolicy }}
    {{- include "admin.capabilities" . | indent 8 }}
        ports:
        - { containerPort: 8888,  protocol: TCP }
        - { containerPort: 48004, protocol: TCP }
        - { containerPort: 48005, protocol: TCP }
        resources:
{{ toYaml .Values.admin.resources | trim | indent 10 }}
    {{- include "admin.envFrom" . | indent 8 }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_UID
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - { name: NUODB_DOMAIN_ENTRYPOINT, value: "{{ template "nuodb.domainEntrypoint" . }}" }
        - { name: NUODB_ALT_ADDRESS,       value: "{{ template "nuodb.altAddress" . }}" }
        - { name: NUODB_VARDIR,            value: "/var/opt/nuodb/$(POD_NAME).$(NAMESPACE)" }
        - { name: COMPONENT_NAME,          value: "admin" }
        - { name: OVERWRITE_COPIES,    value: "{{ .Values.admin.logPersistence.overwriteBackoff.copies | default "3" }}" }
        - { name: OVERWRITE_WINDOW,    value: "{{ .Values.admin.logPersistence.overwriteBackoff.windowMinutes | default "120" }}" }
      {{- if .Values.admin.tlsKeyStore }}
        {{- if .Values.admin.tlsKeyStore.password }}
        - { name: NUODB_KEYSTORE_PASSWORD,    value: {{ .Values.admin.tlsKeyStore.password | quote }} }
        {{- end }}
      {{- end }}
      {{- if .Values.admin.tlsTrustStore }}
        {{- if .Values.admin.tlsTrustStore.password }}
        - { name: NUODB_TRUSTSTORE_PASSWORD,  value: {{ .Values.admin.tlsTrustStore.password | quote }} }
        {{- end }}
      {{- end }}
        args:
          - "nuoadmin"
          - "--"
          {{- range $opt, $val := .Values.admin.options}}
          - "{{$opt}}={{$val}}" 
          {{- end}}
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 15
          tcpSocket:
            port: 8888
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 15
          exec:
            command: [ "nuodocker", "check", "servers", "--check-connected", "--check-active", "--check-leader" ]
          failureThreshold: 30
          successThreshold: 2
          timeoutSeconds: {{ default 1 .Values.admin.readinessTimeoutSeconds }}
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nuodb
        {{- with .Values.admin.configFiles }}
        {{- range $key, $val := . }}
        - name: configurations
          mountPath: {{ $.Values.admin.configFilesPath }}{{ $key }}
          subPath: {{ $key }}
        {{- end -}}
        {{- end }}
        - name: raftlog
          mountPath: /var/opt/nuodb
        - name: nuoadmin
          mountPath: /usr/local/bin/nuoadmin
          subPath: nuoadmin
        {{- if .Values.admin.tlsCACert }}
        - name: tls-ca-cert
          mountPath: /etc/nuodb/keys/ca.cert
          subPath: {{ .Values.admin.tlsCACert.key }}
        {{- end }}
        {{- if .Values.admin.tlsKeyStore }}
        - name: tls-keystore
          mountPath: /etc/nuodb/keys/nuoadmin.p12
          subPath: {{ .Values.admin.tlsKeyStore.key }}
        {{- end }}
        {{- if .Values.admin.tlsTrustStore }}
        - name: tls-truststore
          mountPath: /etc/nuodb/keys/nuoadmin-truststore.p12
          subPath: {{ .Values.admin.tlsTrustStore.key }}
        {{- end }}
        {{- if .Values.admin.tlsClientPEM }}
        - name: tls-client-pem
          mountPath: /etc/nuodb/keys/nuocmd.pem
          subPath: {{ .Values.admin.tlsClientPEM.key }}
        {{- end }}
{{- include "nuodb.imagePullSecrets" . | indent 6 }}
      volumes:
      {{- if .Values.admin.tlsCACert }}
      - name: tls-ca-cert
        secret:
          secretName: {{ .Values.admin.tlsCACert.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if .Values.admin.tlsKeyStore }}
      - name: tls-keystore
        secret:
          secretName: {{ .Values.admin.tlsKeyStore.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if .Values.admin.tlsTrustStore }}
      - name: tls-truststore
        secret:
          secretName: {{ .Values.admin.tlsTrustStore.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if .Values.admin.tlsClientPEM }}
      - name: tls-client-pem
        secret:
          secretName: {{ .Values.admin.tlsClientPEM.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if not .Values.admin.logPersistence.enabled }}
      - name: log-volume
        emptyDir: {}
      {{- end }}
      {{- if .Values.admin.configFiles }}
      - name: configurations
        configMap:
          name: {{ template "admin.fullname" . }}-configuration
      {{- end }}
      - name: nuoadmin
        configMap:
          name: {{ template "admin.fullname" . }}-nuoadmin
          defaultMode: 0777
  volumeClaimTemplates:
  - metadata:
      name: raftlog
      labels:
        app: {{ template "admin.fullname" . }}
        group: nuodb
        domain: {{ .Values.admin.domain }}
        chart: {{ template "admin.chart" . }}
        release: {{ .Release.Name | quote }}
    spec:
    {{- if .Values.admin.persistence.storageClass }}
      {{- if (eq "-" .Values.admin.persistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.admin.persistence.storageClass }}
      {{- end }}
    {{- end }}
      accessModes:
      {{- range .Values.admin.persistence.accessModes }}
        - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.admin.persistence.size }}
{{- if .Values.admin.logPersistence.enabled }}
  - metadata:
      name: log-volume
      labels:
        app: {{ template "admin.fullname" . }}
        group: nuodb
        domain: {{ .Values.admin.domain }}
        chart: {{ template "admin.chart" . }}
        release: {{ .Release.Name | quote }}
    spec:
    {{- if .Values.admin.logPersistence.storageClass }}
      {{- if (eq "-" .Values.admin.logPersistence.storageClass) }}
      storageClassName: ""
      {{- else }}
      storageClassName: {{ .Values.admin.logPersistence.storageClass }}
      {{- end }}
    {{- end }}
      accessModes:
      {{- range .Values.admin.logPersistence.accessModes }}
        - {{ . }}
      {{- end }}
      resources:
        requests:
          storage: {{ .Values.admin.logPersistence.size }}
{{- end }}
