apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: monitor
    group: nuodb
    subgoup: monitoring
  name: nuodb-dashboard-display    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor
      deployment: nuodb-dashboard-display
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: monitor
        group: nuodb
        subgroup: monitoring
        selector: frontend
        deployment: nuodb-dashboard-display
    spec:
      containers:
      - name: grafana
        image: {{ template "grafana.image" . }}
        imagePullPolicy: {{ .Values.grafana.image.pullPolicy }}
        env:
        - { name: GF_SECURITY_ADMIN_PASSWORD, value: "nuodb" }
        ports:
        - { name: grafana-http, containerPort: 3000 }
        volumeMounts:
        - mountPath: "/root/go/src/github.com/grafana/grafana/data"
          name: grafana-data
        - name: provision-datasource
          mountPath: "/etc/grafana/provisioning/datasources/datasource.yaml"
          subPath: datasource.yaml
        - name: provision-dashboards
          mountPath: "/etc/grafana/provisioning/dashboards/nuodb.yaml"
          subPath: nuodb.yaml
        - name: nuodb-dashboards
          mountPath: "/var/lib/grafana/dashboards"
        resources: {}
{{- include "grafana.imagePullSecrets" . | indent 6 }}
      volumes:
      - name: grafana-data
        emptyDir: {}
      - name: provision-datasource
        configMap:
          name: nuodb-dashboard-provisioning
      - name: provision-dashboards
        configMap:
          name: nuodb-dashboard-provisioning
      - name: nuodb-dashboards
        projected:
          sources:
          {{- range $path, $bytes := .Files.Glob "files/dashboards/**.json" }}
          {{- $name :=  base ($path) | replace (ext ($path)) ""}}
          - configMap:
              name: nuodb-dashboards-{{ $name }}
          {{- end }}                 
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: monitor
    group: nuodb
    subgroup: monitoring
  name: nuodb-metrics-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: monitor
      deployment: nuodb-metrics-collector
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: monitor
        group: nuodb
        subgroup: monitoring
        deployment: nuodb-metrics-collector
    spec:
      containers:
      - name: nuoca
        image: {{ template "nuodb.image" . }}
        imagePullPolicy: {{ .Values.nuodb.image.pullPolicy }}
        args: [ "nuoca", "start" , "nuoca", "--collection-interval", "10" ]
        {{- include "influx.capabilities" . | indent 8 }}
        {{- include "influx.envFrom" . | indent 8 }}
        env:
        - { name: NUOCMD_API_SERVER , value: "https://{{ template "admin.address" . }}:8888" }
        volumeMounts:
        - name: log-volume
          mountPath: /var/log/nuodb
        - name: config-insights
          mountPath: /etc/nuodb/nuoca.yml.template
          subPath: nuoca.yml.template
        {{- if .Values.admin.tlsCACert }}
        - name: tls-ca-cert
          mountPath: /etc/nuodb/keys/ca.cert
          subPath: {{ .Values.admin.tlsCACert.key }}
        {{- end }}
        {{- if .Values.admin.tlsClientPEM }}
        - name: tls-client-pem
          mountPath: /etc/nuodb/keys/nuocmd.pem
          subPath: {{ .Values.admin.tlsClientPEM.key }}
        {{- end }}
{{- include "nuodb.imagePullSecrets" . | indent 6 }}
      volumes:
      - name: log-volume
        emptyDir: {}
      - name: config-insights
        configMap:
          name: nuoca-influxdb-configmap
      {{- if .Values.admin.tlsCACert }}
      - name: tls-ca-cert
        secret:
          secretName: {{ .Values.admin.tlsCACert.secret }}
          defaultMode: 0440
      {{- end }}
      {{- if .Values.admin.tlsClientPEM }}
      - name: tls-client-pem
        secret:
          secretName: {{ .Values.admin.tlsClientPEM.secret }}
          defaultMode: 0440
      {{- end }}
